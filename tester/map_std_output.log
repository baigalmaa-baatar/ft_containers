Map test starts:

***************************************

      1-1.  Constructor

            Default

***************************************
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
a => 10
b => 30
c => 50
d => 70

***************************************

       4-1.  insert 

                   

***************************************
element 'z' already existed with a value of 200

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
a => 100
b => 300
c => 400
z => 200

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
STD another mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
a => 100
b => 300

***************************************

       5-1.  erase 

                   

***************************************

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
a => 10
d => 40

***************************************

       11. swap

                   

***************************************

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
foo contains:
a => 11
b => 22
c => 33
bar contains:
x => 100
y => 200

***************************************

       12. clear

                   

***************************************

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
mymap contains:
x => 100
y => 200
z => 300
mymap contains:
a => 1101
b => 2202

***************************************

       7-1.  empty 

                   

***************************************

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
a => 10
b => 20
c => 30

***************************************

      2-1.  operator=() 

            Default

***************************************
Size of first: 0
Size of second: 3

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
x => 8
y => 16
z => 32

***************************************

       13. key_comp

                   

***************************************

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
mymap contains:
a => 100
b => 200
c => 300


***************************************

       14. value_comp

                   

***************************************

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
mymap contains:
x => 1001
y => 2002
z => 3003

***************************************

       15. find

                   

***************************************

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
elements in mymap:
a => 50
c => 150
d => 200

***************************************

       16. count

                   

***************************************

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
a is an element of mymap.
b is not an element of mymap.
c is an element of mymap.
d is not an element of mymap.
e is not an element of mymap.
f is an element of mymap.
g is not an element of mymap.

***************************************

       6-1.  lower bound 

                   

***************************************

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
a => 20
e => 100

***************************************

      3-1.  iterator 

            begin, end

***************************************

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
a => 200
b => 100
c => 300

***************************************

      3-1.  iterator 

            rbegin, rend

***************************************

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
z => 300
y => 200
x => 100

***************************************

       8-1.iterator 

           begin        

***************************************

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
a => 10

***************************************

       9. size

                   

***************************************

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
mymap.size() is 3

***************************************

       10. size

                   

***************************************

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 STD mymap contains:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
mymap['a'] is an element
mymap['b'] is another element
mymap['c'] is another element
mymap['d'] is 
mymap now contains 4 elements.

***************************************

       17. comp const iterator

                   

***************************************
it1 : << a => 2.3
it2 : << a => 2.3
it1 : << a => 2.3
it2 : << b => 1.4
it1 : << a => 2.3
it2 : << c => 0.3
it1 : << a => 2.3
it2 : << d => 4.2
it1 : << b => 1.4
it2 : << a => 2.3
it1 : << b => 1.4
it2 : << b => 1.4
it1 : << b => 1.4
it2 : << c => 0.3
it1 : << b => 1.4
it2 : << d => 4.2
it1 : << c => 0.3
it2 : << a => 2.3
it1 : << c => 0.3
it2 : << b => 1.4
it1 : << c => 0.3
it2 : << c => 0.3
it1 : << c => 0.3
it2 : << d => 4.2
it1 : << d => 4.2
it2 : << a => 2.3
it1 : << d => 4.2
it2 : << b => 1.4
it1 : << d => 4.2
it2 : << c => 0.3
it1 : << d => 4.2
it2 : << d => 4.2
Map test finished.
